{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","ataque","Ganador","Jugador","Math","floor","random","length","document","getElementById","style","display","map","obj","className","id","onClick","boton","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yJAiHeA,MA/Gf,WACE,IAAMC,EAAS,CAAC,SAAU,QAAS,WAW7BC,EAAU,SAACC,GAEf,OAAQA,EAVM,CAACF,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,WAatD,IAAK,aAIL,IAAK,iBAKL,IAAK,eACHC,SAASC,eAAe,UAAUC,MAAMC,QAAU,QAClD,MAGF,IAAK,gBAKL,IAAK,eAKL,IAAK,cACHH,SAASC,eAAe,WAAWC,MAAMC,QAAU,QACnD,MAEF,QACEH,SAASC,eAAe,YAAYC,MAAMC,QAAU,UAK1D,OACE,qCAlDgB,CAAC,UAAW,SAAU,YAmDzBC,KAAI,SAACC,GAAD,OACb,sBAAKC,UAAU,QAAQC,GAAIF,EAA3B,UACE,6BAAKA,IACL,wBAAQG,QAAS,kBAhDLC,EAgDsBJ,OA/CxCL,SAASC,eAAT,UAA2BQ,IAASP,MAAMC,QAAU,QADnC,IAACM,GAgDZ,8BAGJ,8BACE,+BACE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,yBAbF,IAagB,yBACd,yBAdF,IAcgB,yBACd,qCACA,yBAhBF,IAgBgB,yBACd,yBAjBF,IAiBgB,yBACd,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,0CAGJ,sBAAKH,UAAU,uBAAf,UACE,qBAAKE,QAAS,kBAAMd,EAAQ,WAAWY,UAAU,SAAjD,SACE,qBACEI,IAAI,uKACJC,IAAI,iBAGR,qBAAKH,QAAS,kBAAMd,EAAQ,UAAUY,UAAU,SAAhD,SACE,qBACEI,IAAI,mJACJC,IAAI,gBAGR,qBAAKH,QAAS,kBAAMd,EAAQ,YAAYY,UAAU,SAAlD,SACE,qBACEI,IAAI,iGACJC,IAAI,yBC7FDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BW,K","file":"static/js/main.067b6542.chunk.js","sourcesContent":["import \"./App.scss\";\n\nfunction App() {\n  const ataque = [\"Piedra\", \"Papel\", \"Tijeras\"];\n  const veredicto = [\"Ganaste\", \"Empate\", \"Perdiste\"];\n  let randon = () => {\n    let elegido = [ataque[Math.floor(Math.random() * ataque.length)]];\n    return elegido;\n  };\n\n  const reintentar = (boton) => {\n    document.getElementById(`${boton}`).style.display = \"none\";\n  };\n\n  const Ganador = (Jugador) => {\n    let maquina = randon();\n    switch (Jugador + maquina) {\n      //empates\n\n      case \"PapelPapel\":\n        document.getElementById(\"Empate\").style.display = \"block\";\n        break;\n\n      case \"TijerasTijeras\":\n        document.getElementById(\"Empate\").style.display = \"block\";\n\n        break;\n\n      case \"PiedraPiedra\": {\n        document.getElementById(\"Empate\").style.display = \"block\";\n        break;\n      }\n      //Piedra\n      case \"PiedraTijeras\": {\n        document.getElementById(\"Ganaste\").style.display = \"block\";\n        break;\n      }\n      //tijera\n      case \"TijerasPapel\": {\n        document.getElementById(\"Ganaste\").style.display = \"block\";\n        break;\n      }\n      //papel\n      case \"PapelPiedra\": {\n        document.getElementById(\"Ganaste\").style.display = \"block\";\n        break;\n      }\n      default:\n        document.getElementById(\"Perdiste\").style.display = \"block\";\n        break;\n    }\n  };\n\n  return (\n    <>\n      {veredicto.map((obj) => (\n        <div className=\"Boton\" id={obj}>\n          <h3>{obj}</h3>\n          <button onClick={() => reintentar(obj)}>Reintentar</button>\n        </div>\n      ))}\n      <div>\n        <h1>\n          <span>P</span>\n          <span>i</span>\n          <span>e</span>\n          <span>d</span>\n          <span>r</span>\n          <span>a</span>\n          <span>,</span>\n          <span>p</span>\n          <span>a</span>\n          <span>p</span>\n          <span>e</span>\n          <span>l</span>\n          <span></span> <span></span>\n          <span></span> <span></span>\n          <span>o</span>\n          <span></span> <span></span>\n          <span></span> <span></span>\n          <span>t</span>\n          <span>i</span>\n          <span>j</span>\n          <span>e</span>\n          <span>r</span>\n          <span>a</span>\n          <span>s</span>\n        </h1>\n      </div>\n      <div className=\"Container_components\">\n        <div onClick={() => Ganador(`Piedra`)} className=\"Opcion\">\n          <img\n            src=\"https://previews.123rf.com/images/kongvector/kongvector1711/kongvector171104302/90585925-estilo-de-dibujos-animados-de-personaje-de-piedra-s%C3%BAper-h%C3%A9roe.jpg\"\n            alt=\"img Piedra\"\n          />\n        </div>\n        <div onClick={() => Ganador(`Papel`)} className=\"Opcion\">\n          <img\n            src=\"https://us.123rf.com/450wm/cthoman/cthoman1508/cthoman150802526/43362246-un-ejemplo-del-dibujo-animado-de-una-pieza-de-baile-de-papel-.jpg?ver=6\"\n            alt=\"img papel\"\n          />\n        </div>\n        <div onClick={() => Ganador(`Tijeras`)} className=\"Opcion\">\n          <img\n            src=\"https://thumbs.dreamstime.com/b/scissors-el-ejemplo-de-la-historieta-del-clip-art-32879166.jpg\"\n            alt=\"img Tijeras\"\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}